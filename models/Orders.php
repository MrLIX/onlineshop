<?php

namespace app\models;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "orders".
 *
 * @property int $id
 * @property int $user_id
 * @property int $amount
 * @property int $state
 * @property string $name
 * @property string $phone
 * @property string $street
 * @property string $index
 * @property string $number_dom
 * @property string $number_kv
 * @property string $lat
 * @property string $lang
 * @property int $delivery_time_id
 * @property int $payment_id
 * @property int $created_at
 * @property int $updated_at
 * @property int $region_id
 *
 * @property OrderProducts[] $orderProducts
 * @property User $user
 * @property PaymentMethod $payment
 */
class Orders extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'orders';
    }

    public function behaviors()
    {
        return [
            TimestampBehavior::className(),
        ]; // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['user_id', 'amount', 'state', 'delivery_time_id', 'payment_id', 'created_at', 'updated_at', 'region_id'], 'integer'],
            [['name', 'phone', 'street', 'index', 'number_dom', 'number_kv', 'lat', 'lang'], 'string', 'max' => 255],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['payment_id'], 'exist', 'skipOnError' => true, 'targetClass' => PaymentMethod::className(), 'targetAttribute' => ['payment_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'user_id' => Yii::t('app', 'User ID'),
            'amount' => Yii::t('app', 'Amount'),
            'state' => Yii::t('app', 'State'),
            'name' => Yii::t('app', 'Name'),
            'phone' => Yii::t('app', 'Phone'),
            'street' => Yii::t('app', 'Street'),
            'index' => Yii::t('app', 'Index'),
            'number_dom' => Yii::t('app', 'Number Dom'),
            'number_kv' => Yii::t('app', 'Number Kv'),
            'lat' => Yii::t('app', 'Lat'),
            'lang' => Yii::t('app', 'Lang'),
            'delivery_time_id' => Yii::t('app', 'Delivery Time ID'),
            'payment_id' => Yii::t('app', 'Payment ID'),
            'created_at' => Yii::t('app', 'Created At'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'region_id' => Yii::t('app', 'Region ID'),
        ];
    }

    public function getAddress(){
        return $this->street.' '.$this->number_dom.'/'.$this->number_kv;
    }
    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrderProducts()
    {
        return $this->hasMany(OrderProducts::className(), ['orders_id' => 'id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPayment()
    {
        return $this->hasOne(PaymentMethod::className(), ['id' => 'payment_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getRayon()
    {
        return $this->hasOne(Rayon::className(), ['id' => 'region_id']);
    }
}
